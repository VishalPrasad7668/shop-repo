{% schema %}
{
    "name": "Product Hotspots",
    "settings": [],
    "blocks": [
        {
            "type": "hotspot",
            "name": "Hotspot",
            "settings": [
                {
                    "type": "product",
                    "id": "product",
                    "label": "Select Product"
                },
                {
                    "type": "range",
                    "id": "top",
                    "label": "Position from Top",
                    "min": 0,
                    "max": 100,
                    "step": 1,
                    "unit": "%",
                    "default": 50
                },
                {
                    "type": "range",
                    "id": "left",
                    "label": "Position from Left",
                    "min": 0,
                    "max": 100,
                    "step": 1,
                    "unit": "%",
                    "default": 50
                }
            ]
        }
    ],
    "presets": [
        {
            "name": "Product Hotspots",
            "blocks": [
                { "type": "hotspot" }
            ]
        }
    ]
}
{% endschema %}
{% for block in section.blocks %}
<div class="hotspot-container">    
        <img src="{{ block.settings.product.featured_image | img_url: '1024x1024' }}" 
     alt="{{ block.settings.product.title }}" 
     class="product-image">


        {% if block.settings.product != blank %}
            <div class="hotspot" onclick="openPopup('{{ block.settings.product.id }}')" 
                 style="top: {{ block.settings.top }}%; left: {{ block.settings.left }}%;" 
                 data-tooltip="{{ block.settings.product.title }}">
                <span>+</span>
            </div>

            <!-- Popup -->
            <!-- Popup -->
<div id="popup-{{ block.settings.product.id }}" class="product-popup">
    <input type="hidden" id="variant-data-{{ block.settings.product.id }}" value="{{ block.settings.product.variants | json }}">
    <div class="popup-content">
        <span class="close-btn" onclick="closePopup('{{ block.settings.product.id }}')">&times;</span>
        <div class="popup-inner">
            <img src="{{ block.settings.product.featured_image | img_url: '500x500' }}" alt="{{ block.settings.product.title }}">
            <div class="popup-details">
                <h2>{{ block.settings.product.title }}</h2>
                <p class="popup-price">{{ block.settings.product.price | money }}</p>
                <p class="popup-desc">{{ block.settings.product.description | strip_html | truncate: 150 }}</p>

                <!-- Color Selector -->
                <div class="color-selector">
                    <label>Color</label>
                    <div class="color-options">
                        {% assign color_options = "" %}
                        {% for variant in block.settings.product.variants %}
                            {% unless color_options contains variant.option2 %}
                                {% assign color_options = color_options | append: variant.option2 | append: "," %}
                            {% endunless %}
                        {% endfor %}
                        {% assign color_options = color_options | split: "," %}
                        
                        {% for color in color_options %}
                            {% unless color == "" %}
                                <button class="color-button {{ color | downcase }}" onclick="selectColor(this, '{{ color }}', '{{ block.settings.product.id }}')">{{ color }}</button>
                            {% endunless %}
                        {% endfor %}
                    </div>
                </div>

                <!-- Size Selector -->
                <div class="size-selector">
                    <label>Size</label>
                    <select id="size-{{ block.settings.product.id }}">
                        <option selected disabled>Choose your size</option>
                        {% assign size_options = "" %}
                        {% for variant in block.settings.product.variants %}
                            {% unless size_options contains variant.option1 %}
                                {% assign size_options = size_options | append: variant.option1 | append: "," %}
                            {% endunless %}
                        {% endfor %}
                        {% assign size_options = size_options | split: "," %}
                        
                        {% for size in size_options %}
                            {% unless size == "" %}
                                <option value="{{ size }}">{{ size }}</option>
                            {% endunless %}
                        {% endfor %}
                    </select>
                </div>

                <!-- Add to Cart Button -->
                <form method="post" action="/cart/add">
                    <input type="hidden" name="id" id="variant-id-{{ block.settings.product.id }}" value="{{ block.settings.product.variants.first.id }}">
                    <button type="submit" class="add-to-cart">ADD TO CART â†’</button>
                </form>
            </div>
        </div>
    </div>
</div>

        {% endif %}

</div>
    {% endfor %}
<style>
/* Container for Image */
.hotspot-container {
    position: relative;
    display: inline-block;
    width: 100%;
    max-width: 600px;
    margin: auto;
}

/* Product Image */
.product-image {
    width: 100%;
    height: auto;
    display: block;
}

/* Hotspot Style */
.hotspot {
    position: absolute;
    width: 25px;
    height: 25px;
    background-color: red;
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    cursor: pointer;
    transition: transform 0.3s ease-in-out;
}

.hotspot:hover {
    transform: scale(1.2);
}

/* Popup Styles */
.product-popup {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.popup-content {
    background: white;
    padding: 20px;
    border-radius: 10px;
    width: 80%;
    max-width: 450px;
    position: relative;
    text-align: left;
}

.close-btn {
    position: absolute;
    top: 10px;
    right: 20px;
    font-size: 30px;
    cursor: pointer;
}

/* Color Options */
.color-options {
    display: flex;
    gap: 10px;
    margin: 10px 0;
}

.color-button {
    background: white;
    border: 1px solid #ccc;
    padding: 8px 15px;
    position: relative;
    cursor: pointer;
    text-align: center;
    font-weight: bold;
    flex: 1;
    overflow: hidden;
}

.color-button:before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 4px; /* Width of the color indicator */
    background-color: inherit; /* Initially matches button background */
}

.color-button.active, .color-button:hover {
    color: white;
    background-color: black;
    border-color: black;
}

/* Specific classes for each color for the indicator */
.color-button.blue:before { background-color: blue; }
.color-button.black:before { background-color: black; }
.color-button.red:before { background-color: red; }
.color-button.grey:before { background-color: grey; }
.color-button.white:before { background-color: white; }

/* Size Selector */
.size-selector select {
    width: 100%;
    padding: 10px;
    border-radius: 5px;
    border: 1px solid black;
}

/* Add to Cart Button */
.add-to-cart {
    display: block;
    width: 100%;
    padding: 12px;
    background: black;
    color: white;
    text-align: center;
    font-weight: bold;
    border: none;
    cursor: pointer;
    border-radius: 5px;
    margin-top: 10px;
}

.add-to-cart:hover {
    background: #333;
}
</style>

<script>
function openPopup(productId) {
    document.getElementById('popup-' + productId).style.display = 'flex';
}

function closePopup(productId) {
    document.getElementById('popup-' + productId).style.display = 'none';
}

function updateVariant(productId) {
    let selectedColor = document.querySelector('.color-button.active') ? document.querySelector('.color-button.active').textContent.trim().toLowerCase() : null;
    let selectedSize = document.getElementById('size-' + productId) ? document.getElementById('size-' + productId).value : null;
    let variants = JSON.parse(document.getElementById('variant-data-' + productId).value);

    let matchingVariant = variants.find(variant => variant.option1.toLowerCase() === selectedSize && variant.option2.toLowerCase() === selectedColor);
    if (matchingVariant) {
        document.getElementById('variant-id-' + productId).value = matchingVariant.id;
    }
}

document.querySelectorAll('.color-button').forEach(button => {
    button.addEventListener('click', function() {
        document.querySelectorAll('.color-button').forEach(btn => btn.classList.remove('active'));
        this.classList.add('active');
        let productId = this.closest('.product-popup').querySelector('input[type="hidden"]').id.split('-')[2];
        updateVariant(productId);
    });
});

document.querySelectorAll('select[id^="size-"]').forEach(select => {
    select.addEventListener('change', function() {
        let productId = this.id.split('-')[2];
        updateVariant(productId);
    });
});
</script>